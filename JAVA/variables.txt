Ver doc  tipos_datos.pdf

Las declaraciones de variables se hacen antes del nombre de variable:

int miNumero;

miNumero = 50;

O también:

int miNiumero = 50;


Podemos declarar varias variables de un mismo tipo a la vez

int x = 1, y = 2 , z = 3;

String nombre, apellido1, apellido2;


CASTING

Para poder convertir el tipo de dato que contiene una variable, es necesario hacer casting. IMPORTANTE, no podemos
hacer operaciones aritméticas con varialbes de diferentes tipos, todas deben ser del mismo tipo

Ej

double primerNumero = 10.55;

int segundoNumero = (int)primerNumero;

Pero la forma ortodoxa de hacerlo es parseando los valores:

Ej

String text = "777";

int number = Integer.parseInt(text);

Tipos comunes de parseados:

string a numero entero --> int newVariable = Integer.parseInt(variable);

numero entero a string --> String newVariable = Integer.toString(variable);

string a float --> float newVariable = Float.parseFloat(variable);

float a string --> String newVariable = Float.toString(variable);

numero entero a numero decimal grande --> double newVariable = Double.parseDouble(variable);

decimal grande a string --> String newVariable = String.valueOf(variable);

char a string --> String newVariable = Character.toString(variable);

string a booleano --> boolean newVariable = Boolean.parseBoolean(variable);

booleano a string --> String newVariable = Boolean.toString(variable);


Tambien podemos casting de menor a mayor tipo, o viceversa:

Widening Casting (automatically) - converting a smaller type to a larger type size
byte -> short -> char -> int -> long -> float -> double

Ej  int numero1;
    long numero2 = numero1;

Narrowing Casting (manually) - converting a larger type to a smaller size type
double -> float -> long -> int -> char -> short -> byte

Ej  double numero1;
    int numero2 = (int) numero1;
    

TERMINACIONES

Los valores float hay que termnarlos con una f (los decimales por defecto son double)

Los valores long hay que terminarlos con una L

Los valores double se pueden terminar con una d,  pero Java 8 los admite sin terminación


AMBITOS

En Java las variables sólo son accesibles dentro del ámbito en el cual son creadas

Una variable declarada dentro de un método, es accesible sólo dentro de dicho método

Una variable declarada dentro de un bloque {} es accesible dentro de dicho bloque


VALORES POR DEFECTO

Todos los tipos de datos primitivos tienen un valor por defecto en caso de declarar las 
variables sin indicar ningún valor:

int --> 0

double --> 0.0d

float --> 0,0f

char --> 'u0000'

boolena --> false

byte --> 0

long --> 0L

short --> 0

En el caso de los tipos de datos de referencia( clases, Arrays, Enumarations, interfaces, Annotations), 
su valor por defecto es null

Los Strings (clase) y cualquier objeto, tiene por defecto el valor null

Los datos primitivos no se pueden inicializar con valor null





