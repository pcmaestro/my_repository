string formating

---------------------------- ULTIMAS VERSIONES DE PYTHON --------------------------------------

Función format():

Podemos formatear números con separador de miles y decimales

Ej.

numero = 1000000

numero = format(numero, ",.2f"))

resultado -->  1,000,000.00

Se puede pasar a formato europeo usando replace():

numero = format(numero, ",.2f")
numero = numero.replace("." , "@").replace("," , ".").replace("@" , ",")

resultado --> 1.000.000,00

Y si hace falta un redondeo ( en lugar de truncar):

numero = round(numero)


También aplica formato a las partes de un string entre llaves

EJ:
#Esto imprime "Me llamo Juan y soy español"
nombre = "Juan"
nacionalidad = "español"
print("Me llamo {} y soy {}".format(nombre, nacionalidad))

Si en la tupla hay muchos elementos, por defecto sigue el orden de primero a último,  pero entrelas llaves podemos poner un número de indice : {0}...{1}...{2}...etc...

Además,  se puede obligar a que el caracter entre llaves sea de un tipo determinado :

{:s} - string
{:d} - nº entero
{:,d} - nº entero con separador de miles
{:.xf} - nº real con x decimales
{:,.xf} - nº real con separador de miles y x decimales

Y tambien podemos combinar estos formatos con números de indice :

{3:,.2f} - Esto nos trae el valor del indice nº 3 , con separador de miles y dos decimales


----------------------------  TODAS LAS VERSIONES DE PYTHON  ---------------------------------

%s = string y objetos que pudieran representarse en string (listas, tuplas)

Ej :
# Esto imprime "Hola, Juan!"
nombre = "Juan"
print("Hola, %s!" % nombre)

# Esto muestra lo siguiente: Una Lista: [1, 2, 3]
milista = [1,2,3]
print("Una lista: %s" % milista)

%d = nº entero

Ej:
# Esto imprime "John is 23 years old."
nombre = "John"
edad = 23
print("%s tiene %d años." % (nombre, edad) )

%.xf = nº real con x digitos decimales , OJO,  no redondea , sólo trunca

Ej :
# Esto convierte 39.43454647 en 39.43

numero = 39.43454647

print("El resultado es %.2f" % numero )



APENDICE :

Elementos que pueden acompañar al simbolo % :

d	for integers
f	for floating point numbers
b	for binary numbers
o	for octal numbers
x/X	for octal hexadecimal numbers (lowercase/uppercase)
s	for string
e	for floating point in exponent format