INSTALACION:

Ir en Google al sitio oficial de Bootstrap y descargar el archivo compiled CSS and JS

El ZIP descargado lo llevamos a la carpeta de nuestro proyecto web y lo descomprimimos dentro

Dentro de la carpeta bootstrap que se crea, están las subcarpetas css y js con los contenidos

En la web de bootstrap hay una starter template, es buena práctica usarla como base de nuestro
proyecto, ya que trae por defecto los enlaces externos de bootstrap, jquery y tether. Es opción
del desarrollador hacer uso de los enlaces externos, o suprimirlos y en su lugar hacer uso del
archivo descargado en local ( será mas rápido y no sujeto a caida de servidores externos)

Para hacer uso del archivo local,  lo haremos con el archivo css/bootstrap.min.css

<link rel = "stylesheet" href = "css/bootstrap.min.css"

Igualmente para javascript

<script src = "js/bootstrap.min.js>     </script>

Los enlaces externos de jquery , popper y tether (librerias js para posicionamiento absoluto de elementos y pop ups)  es mejor no tocarlos, pero se pueden sustituir también por
archivos en local



CLASES:

Bootstrap dispone de unas clases CSS prediseñadas

container - añade margenes y centra el contenido

container-fluid - ocupa todo el ancho de pantalla

row -  crea filas

col - crea columnas

Mediante una serie de atributos, podemos manipular el comportamiento de estas clases

A parte de esto, podemos crear clases propias a las cuales aplicar con el método tradicional
el estilo CSS ,   de hecho incluso podemos combinar las clases bootstrap con las nuestras propias

Ej.

<div class = "row mi_clase"> --> Podemos aplicar en la fila CSS personalizado sobre mi_clase


Modelo 12 columnas (Grid Layout):

Utilizamos las 12 columnas para crear espacios ( div, article, section... ) que luego podemos rellenar con texto , imagenes,
iconos,  colores....

Es necesario crear siempre un row(fila) antes de manipular las columnas,  dicho row no puede estar incluido
en el mismo div que un container. Asi pues, como mínimo habrá un fila, pero podemos dividir el container en
las que necesitemos

<div class = "container"> <div class = "row"> <div class = "col-4">Hola Mundo</div></div></div>

Se pueden crear directamente escribiendo por ej div.container , div.row , div.col-4.....

No se puede ocupar más espacio de las 12 columnas porque los bloques se descolocará, las 12 columnas se
cuentan respecto del contenedor del html que queramos escribir, lo cual quiere decir que se puede hacer
por ejemplo esto:

<div class = "container">
	<div class = "row">
		<div class = "col-9">
			<div class = row">
				<div class = "col-6"> </div>
				<div class = "col-6"> </div>	
			</div>		
		</div>
	</div>
</div>

Aqui henos creado primero un row y tomado un espacio de 9 columnas , dentro de dicho espacio hemos creado
otro row interno,  el cual a su vez vuelve a tener 12 columnas, y lo hemos dividido en dos partes de 6

Disposición responsiva de columnas:

Para que el layout de las columnas se vea bien sea cual sea el tamaño de la pantalla del dispositivo, 
bootstrap disponer de unos breakpoints que disponen a su vez de estos prefijos de clase:

Extra small (smart watch y moviles pequeños) - .col-xs-  < 575px

Small (smart phone) -  .col-sm- 576-767px

Medium (tablets) - .col-md- 768-991px

Large (PC) - .col-lg-  992-1199px

Extra Large (TV) - .col-xl-  > 1200px

Ej.  Disposición para que un div ocupe 12 columnas en smart phone, 6 columnas en tablet y 4 en PC:

<div class = "col-12 col-sm-12 col-md-6 col-lg-4"> </div> --> Por defecto, col-12 = col-xs-12

Se recomiendo empezar a trabajar siempre visualizando de menor a mayor tamaño, Google Chrome dispone de
un visualizador de páginas web en el display de diferentes dispositivos

ALINEAMIENTO VERTICAL

Por defecto el contenido(columnas) siempre se aliena en la parte superior de un espacio (div) , pero bootstrap
dispone de funcionalidades de Flexbox que permite manipular fácilmente el alineamiento de los row dentro
de un container :

<div class = "row align-items-start">  alinea los elementos en la parte de arriba del container
<div class = "row align-items-center"> alinea los elementos en el centro del container
<div class = "row align-items-end"> alinea los elementos en la parte de abajo del container

Esto se puede aplicar a una fila completa, pero podemos además aplicar dentro de una fila diferentes
alineamientos a las columnas (efecto que parte la linea) usando esto :

<div class = "row align-self-start">  alinea los elementos en la parte de arriba del container
<div class = "row align-self-center"> alinea los elementos en el centro del container
<div class = "row align-self-end"> alinea los elementos en la parte de abajo del container

ALINEAMIENTO HORIZONTAL

Por defecto el contenido(columnas) siempre se alinea a la izquierda , pero podemos hacer que se alineen
al centro o a la derecha:

<div class = "row justify-content-start">
<div class = "row justify-content-center">
<div class = "row justify-content-end">
<div class = "row justify-content-between">  si tenemos 2 o mas columnas, 2 se pegan a los lados y el resto al centro
<div class = "row justify-content-around">   si tenemos 2 o mas columnas, 2 se pegan a los lados, pero dejando un espacio (centrandose)

FLOAT

class float-left --> alinea el elemento a la izquierda
class float-right --> alinea el elemento a la derecha
class clearfix --> se indica en el elemento padre para que los elementos flotados respeten su individualidad cuando ya
		   hay mucho contenido
class float-none --> el elemento no flota en ninguna dirección

class float-sm-right --> el elemento en un smart phone se alineará a la derecha
class float-md-left --> el elemento en una tablet se alineará a la izquierda

CENTRAR CONTENEDORES

mx-auto --> margin en el eje x auto


COMBINAR ALINEAMIENTOS

Ej .  Texto alineado horizontalmente a la derecha, pero verticalmente en el centro

<div class = "row justify-content-end align-items-center">

ANCHO Y ALTO DE ELEMENTOS

w = width
h = height

La unidad de medida será % 

Ej .

<div class = "w-50 h-50">  este div ocupará el 50% del ancho y alto de su contenedor


TIPOGRAFIAS

Bootstrap disponer de los clásicos cabeceras HTML h1, h2, h3.... con estilos predfinidos de tamaño y tipo de letra, pero
además los puedes invocar como clases .h1, .h2, .h3.... para aplicarlas a párrafos. Si se combinan estas clases con la
etiqueta <small class = ".h2"> el texto toma el 80 % del tamaño original.  

class display
También se pueden usar las clases display:

<h1 class = "display-1"> --> Van del 1 al 4 , o sea, de mayor a menor con mayor a menor grosor de letra

La clase display es en bootstrap la forma más elegante de crear títulos

class small
Crea letra un poco más pequeña y estilizada del tamaño normal del texto

class mark
Crea un sombreado de otro color alrededor del texto

class text-muted
Colorea el texto con un gris elegante

class lead
Colorea el texto con un gris elegante y le pone un grosor estilizado

class jumbotron
Toma un texto y lo mete dentro de una caja sombreada con un padding lateral, con jumbotron-fluid el texto se espande
por toda la caja suprimiendo el padding, se usa para resaltar textos

class alert
Hace lo mismo que el anterior, pero sin sombrear. Si se combina con colores bootstrap, sombrea y colorea el texto

class badge (insignia)
Crea una letra algo más pequeña y en negrita, se puede colorear el fondo , lo cual deja la letra de color blanco

Ej

<span class = "badge badge-primary"> Insignia </span>

<span class = "badge badge-primary badge-pill"> Insignia </span> --> esto redondea los bordes y crea una pildora


Ver el resto de clases de tipografias en la documentación oficial de Bootstrap

ALERTAS

Volviendo a la clase alert,  permite crear alertas que se pueden ocultar pulsando una X pintada dentro de un botón

Ej.

<p class = "alert alert-primary alert dismissable>

	operacion concluida

	<button type = "button" class = "close" data-dismiss = "alert">&times;</button>

</p>



CONTENIDOS ( textos )

Alineamiento de texto:

Los textos por defecto se alinean a las izquierda (class text-left)

class text-justify --> justifica el texto
class text-center --> centra el texto en el contenedor
class text-right --> alinea el texto a la derecha del contenedor
class text-nowrap --> el texto se extiende en una sóla linea sin corte (salto de línea), creando un
		      un scroll en el eje x

Usando los prefijos -sm-,  -md- , -lg- y -xl- podemos hacer además las alineaciones responsivas al viewport

Clases para poner el texto todo en minusculas, todo en mayusculas o capitalizado

class text-lowercase
class text-uppercase
clas text-capitalized

Efecto Font Weight

class font-weight-bold  --> equivale a la etiqueta <b>
class font-weight-normal
class font-weight-italic  --> equivale a la etiqueta <i>

ESPACIADOS

rem --> unidad de medida equivalente a 16px , que es el tamaño estandar el texto HTML

Los espaciados los hacemos aplicando las clases margin y padding:

m --> margin
p --> padding

A estas clases hay que añadir un valor de espaciado, que podrá ser :

0 - 0 rem
1 - 0,25 rem
2 - 0,50 rem
3 - 1 rem
4 - 1,5 rem
5 - 3 rem

Y una zona de aplicación :

t - top
b - bottom
l - left
r - right
x - eje x a ambos lados (left & right)
y - eje y arriba y abajo (top & bottom)

Ej. Párrafo con padding top de 0,50 rem

<p class = "pt-2">

Ej. div con un margen de 3 rem a ambos lados

<div class = "mx-5"

COLORES

Bootstrap trae unos colores predefinidos

primary (azul claro)
secondary (gris oscuro)
dark (gris muy oscuro)
light (gris claro)
danger (rojo granate)
warning (naranja)
success (verde)
info (azul grisaceo)
white (blanco)

Se pueden aplicar a los elementos de esta manera:

text-primary --> colorea el texto
bg-dark --> colorea el fondo (background)

podemos aplicar los colores a cualquier clase definida en Bootstrap invocando la clase , y luego clase + color

Ej

<ul class = "list-group list-group-primary">
<button class = "btn btn-dark">


BORDES

class border --> crea bordes estilizados, finos y grises

OCULTACION RESPONSIVA

d = display

d-none --> ocultar
d-block --> mostrar en pila
d-inline-block --> mostrar en linea

d-xs-none --> ocultar en dispositivos extra small
d-sm-none --> ocultar en dispositivos smart phone
d-md-block --> mostrar en tablets
d-lg-block --> mostrar en PC
d-xl-block --> mostrar en TV

Como la filosofia Bootstrap es small first , si defino ocultar o mostrar por ejemplo en un dispositivo md y no digo nada
más de los superiores,  estos se comportarán con lo definido para el md


POSICIONES DE ELEMENTOS

Clases comunes de posicionamiento (no son responsivas)

<div class="position-static">...</div>
<div class="position-relative">...</div>
<div class="position-absolute">...</div>
<div class="position-fixed">...</div>
<div class="position-sticky">...</div>

class fixed-top
class fixed-bottom
class sticky-top --> Solo se fija cuando el scroll la sobrepasa

TABLAS

En Visual Studio Code podemos crear elementos <tr> y <td> de forma automática, por ejemplo, esto crea 5 celdas:

td*5

Bootstrap dispone de esta clase:

class table --> Separa las filas con una linea horizontal delgada y estiizada en gris claro , su comportamiento es
		responsivo

class table-striped --> igual que la anterior, pero sombreando en gris claro una linea si y otra no

class table-hover --> sombrea sólo la linea sobre la que está el cursor

class  table-bordered --> Crea bordes delgados y estilizados color gris claro

class table-dark --> Usa el color dark de bootstrap como fondo, y el texto se pone blanco (pueden ser otros colores bootstrap)

IMAGENES

class img-fluid --> La imagen se adapta de forma responsiva a su contenedor

class rounded --> las esquinas de la imagen se redondean levemente  ( con rounded-circle se crea un círculo)

class img-thumbnail --> Crea un marco alrededor de la imagen

ENLACES

class alert-link --> alinea el color del link con el del texto, pero en negrita y más oscuro


BOTONES

Usamos la etiqueta <button>

class btn --> Crea un botón gris de bordes redondeados sin efecto dimensional


Para definir los colores, se vuelven más claros al hacer hover:

Ej

<button class =  "btn btn-primary">


Para colorear solo el borde, se colorea el fondo al hacer hover:

Ej

<button class =  "btn btn-outline-primary">


Para modificar el tamaño:

Ej

<button class =  "btn btn-lg"> --> mayor

<button class =  "btn btn-sm"> --> menor

<button class =  "btn btn-block"> --> ocupa todo el ancho del contenedor


Para deshabilitar el botón (aparece de color más claro y no funciona)

Ej

<button class =  "btn btn-sm disabled">  --> con active sería al revés, botón más resaltado

Para agrupar botones (simula un menú con una flecha hacia abajo)

<div class = "btn-group"> --> Los botones se pegan en modo inline-block
<div class = "btn-group btn-group-verical"> --> Los botones se pegan verticalmente en modo block

Luego dentro del div creamos los <button>

Para desplegar el menú a partir de este grupo de botones, creamos otro div dentro del div que los
contiene


	<div class = "btn-group">  

		<button class ="btn dropdown-toggle" data-toogle = "dropdown"> ELEGIR OPCION </button>
		<div class = "dropdown-menu"
		<a href = "#" class = "dropdown-item"> OPCION 1 </a>
		<a href = "#" class = "dropdown-item"> OPCION 2 </a>
		</div>

	</div>

BOTON TOOGLE

Con este botón podemos mostrar y ocultar un texto, por ejemplo de ayuda o comentario

<button data-toggle = "collapse" data-target = "#texto_oculto"></button> --> Si cambias data-target por href, se pinta un link

<div id = "texto_oculto" class = "collapse">
    Texto que se muestra y oculta al pulsar el botón
</div>



MENU DESPLEGABLE

    <div class="dropdown"> --> con dropup se despliega hacia arriba

        <button class = "btn btn-primary dropdown-toggle" data-toggle = "dropdown">
        DEPLEGABLE
        </button>

        <div class="dropdown-menu">
	    <div class = ·"dropdown-header">Cabecera</div> --> opcional, pinta un cabecera con letra de color más tenue
            <a href="#" class="dropdown-item">Link 1</a>
            <a href="#" class="dropdown-item">Link 2</a>
	    <div class = "dropdown-divider"></div>  --> opcional, pinta una linea divisoria entre los elementos
            <a href="#" class="dropdown-item">Link 3</a>
        </div>
    </div>

BARRA DE PROGESO

Bootstrap permite crear barras de progreso (son estáticas, no tienen efecto real de progreso) , sus valores son 25,50 y 75 %

<div class = "progress"> --> por defecto la barra de deslizamiento del progreso se crea de extremo a extremo del contenedor

	<div class = "progress-bar w-50 bg-success"> 50% </div> --> Hay que indicar el ancho del progreso en la barra

</div>

Si queremos pintar un valor distinto de 25, 50 o 75 % , tendremos que hacer uso del atributo style para el ancho

dentro del <div class = "progress"> podemos meter varios <div class = "progress-bar"> con diferentes valores para crear
una barra con varios porcentajes

ACORDEONES

Los acordeones son elementos que se muestran y ocultan al clickarlos , si se usan cajas tipo card, tenemos un header
que el ser clickado muestra y oculta un texto debajo

<div id="acordion">

    <div class="card">

        <div class="card-header">

            <a href="#primero" class="card-link" data-toggle="collapse" data-parent="#acordion">
                PRIMERO
            </a>
        </div>

        <div id="primero" class="collapse show">
            <div class="card-body">Texto para ocultar y mostrar</div>
        </div>

        <div class="card-header">

            <a href="#segundo" class="card-link" data-toggle="collapse" data-parent="#acordion">
                SEGUNDO
            </a>
        </div>

        <div id="segundo" class="collapse show">
            <div class="card-body">Otro texto para ocultar y mostrar</div>
        </div>
    </div>
</div>



PAGINACION

La paginación se lleva a cabo en python o PHP , pero en HTML Bootstrap permite pintar un elegante conjunto de cuadritos
en modo inline-block para poner los links a las diferentes páginas , al hacer hover se sombrea en gris el fondo

<div class="pagination">

    <li class = "page-item"><a class = "page-link" href="#">1</a></li>
    <li class = "page-item"><a class = "page-link" href="#">2</a></li>
    <li class = "page-item active"><a class = "page-link" href="#">3</a></li> --> este se sombrea en color sólido como página activa actual
    <li class = "page-item"><a class = "page-link" href="#">4</a></li>

</div>

Podemos hacer los cuadritos más grandes o más pequeños:

<div class="pagination patinagtion-sm">

MIGAS DE PAN

Los breadcrumbs son una forma de navegación mediante links que se utiliza a modo de estructura de directorios para indicar al usuario
en que lugar de la web se encuentra

Ej

INICIO / OPCIONES / OPCION 1

Para crear esto las clases son las siguientes:

<ul class="breadcrumb">

    <li class = "breadcrumb-item"><a href="#">INICIO</a></li>
    <li class = "breadcrumb-item"><a href="#">OPCIONES</a></li>
    <li class = "breadcrumb-item"><a href="#">OPCION 1</a></li>

</ul>


LISTAS

Esto pinta los elementos de la lista dentro de celdas que ocupan todo el ancho del contenedor

<ul class="list-group">
    <li class = "list-item">LUNES</li>
    <li class = "list-item">MARTES</li>
    <li class = "list-item disabled">MIERCOLES</li> --> la letra se pone en un gris ténue
    <li class = "list-item">JUEVES</li>
    <li class = "list-item">VIERNES</li>
    <li class = "list-item active">SABADO</li> --> sombreado en color sólido
    <li class = "list-item">DOMINGO</li>
</ul>

MENU DE NAVEGACION

Creamos una lista y la clase nav la pone en modo inline , añadiendo la clase flex-colum se pondria en modo block

    <ul class="nav justify-content-center"> --> por defecto se alinea a la izquierda del contenedor , si utilizamos
						nav-justified, se distribuyen por todo el ancho del contenedor

        <li class="nav-item"><a href="#" class="nav-link">Link 1</a></li>
        <li class="nav-item"><a href="#" class="nav-link">Link 2</a></li>
        <li class="nav-item"><a href="#" class="nav-link">Link 3</a></li>
        <li class="nav-item dropdown"><a href="#" class="nav-link dropdown-toggle" data-toggle = "dropdown">Link 4</a></li> --> con submenús
		<div class = "dropdown-menu">
		    <a href = "#" class = "dropdown-item">Submenu 1</a>
		    <a href = "#" class = "dropdown-item">Submenu 2</a>
		    <a href = "#" class = "dropdown-item">Submenu 3</a>

    </ul>


BARRA DE NAVEGACION (NAVBAR)

Bootstrap dispone de código para copiar-pegar un navbar sencillo y responsivo a pantallas pequeñas que nosotros podemos manipular 
según nuestras necesidades, incluye un icono de rallitas horizontales para pantallas pequeñas. En cualquier caso , también podemos crearlo:


    <nav class="navbar navbar-expand-md fixed-top"> --> Horizontal de tablet para arriba, vertical en pantallas pequeñas

        <a href="#" class="navbar-brand">NOMBRE DE LA EMPRESA</a> --> Pinta el nombre de la empresa delante del menú
        (puede ser una imagen)

        <button class="navbar-toggler" type="button" data-toggler="collapse" data-target="#uno">

            <span class="navbar-toggler-icon"></span> --> botón con forma de rallitas horizontales, en este caso se
            mostrará
            en pantallas inferiores a tablet

        </button>

        <div class="collapse navbar-collapse" id="uno">

            <ul class="navbar-nav">

                <li class="nav-item"><a href="#" class="nav-link">Link 1</a></li>
                <li class="nav-item"><a href="#" class="nav-link">Link 2</a></li>
                <li class="nav-item-dropdown">

                    <a href="#" class="nav-link-dropdown-toggle" data-toggle="dropdown" id="navbardrop">Link 3</a>

                    <div class="dropdown-menu">

                        <a href="#" class="dropdown-item">Submenu 1</a>
                        <a href="#" class="dropdown-item">Submenu 2</a>
                        <a href="#" class="dropdown-item">Submenu 3</a>

                    </div>
                </li>
                <form action = "#" method="POST" class = "form-inline"> --> Caja de búsqueda incluida en el menú
                    <input type="text" name="nombre" class = "form-control mr-sm-2" />
                    <button class="btn btn-success" type = "submit">BUSCAR</button>
                </form>
            </ul>
        </div>
    </nav>


TARJETAS

Una tarjeta de presentación tiene 3 elementos :  header, body & footer

La tarjeta es un objeto que permite crear un cuadro de presentación en el cual podemos poner una imagen

    <div class="card w-50">
        <div class="card-header">
            <p>Cargo en la empresa</p>
        </div>

        <img src="imagenes/foto.png" />

        <div class="card-body">
            <h3 class="card-title">Nombre de la persona</h3>
            <p class="card-text">Breve descripción o comentario</p>
            <a href="#" class="btn btn-primary">VER PERFIL</a>
        </div>

        <div class="footer">
            <p>Comentarios de pide de tarjeta</p>
        </div>

    </div>

El header y el footer son opcionales


FORMULARIOS

<input type = "text" class = "form-control">
<input type = "checkbox" class = "form-check-input"> --> en el <label> podemos usar la class = "form-check-label"
<textarea> --> No hay clases, Bootstrap los maneja por defecto
<select>  --> No hay clases, Bootstrap los maneja por defecto
<input type = "radio" class = "radio-inline"> --> Se muestran en modo inline , si los separamos metidos en <div class = "radio">
						  se pitan en modo block

<input type = "submit" value = "ENVIAR" class = "btn btn-success">

En el <form> podemo añadir la class = "inline" para que los formularios salgan en línea


CARRUSELES

Son elementos que van pasando imágenes hacia un lado según se va haciendo click

 <div class="carousel slide" data-ride="carousel" id="demo">

        <!--INDICADORES-->

        <ul class="carousel-indicators"> --> Crear tantos como imagenes a mostrar

            <li data-target="demo" data-slide-to="0" class="active"></li>
            <li data-target="demo" data-slide-to="1"></li>
            <li data-target="demo" data-slide-to="2"></li>

        </ul>

        <!--IMAGENES-->

        <div class="carousel-inner"> --> Crear tantos items como imagenes a mostrar

            <div class="carousel-item active">
                <img src="imagenes/foto1.jpg" class="img-fluid">
                <div class="carousel-caption">
                    <h3>TITULO</h3>
                    <p>descripción de la imagen 1</p>
                </div>
            </div>

            <div class="carousel-item">
                <img src="imagenes/foto2.jpg" class="img-fluid">
                <div class="carousel-caption">
                    <h3>TITULO</h3>
                    <p>descripción de la imagen 2</p>
                </div>
            </div>

            <div class="carousel-item">
                <img src="imagenes/foto3.jpg" class="img-fluid">
                <div class="carousel-caption">
                    <h3>TITULO</h3>
                    <p>descripción de la imagen 3</p>
                </div>
            </div>

        </div>


        <!--CONTROLES-->

        <a href="#demo" class="carousel-control-prev" data-slide="prev">
            <span class="carousel-control-prev-icon"></span>
        </a>

        <a href="#demo" class="carousel-control-next" data-slide="prev">
            <span class="carousel-control-next-icon"></span>
        </a>

    </div>

VENTANAS MODALES

Los modales son ventanas flotantes de javascript con informaciones que el usuario puede cerrar , se componen de un cabecera,
un cuerpo y un pié:	


<div class="modal fade" id = "mimodal">

        <div class="modal-dialog"></div>
            <div class="modal-content">
                
                <!--HEADER-->
                <div class="modal-header">
                    <h4 class="modal-title">CABECERA</h4>
                    <button type = "button" class="close" data-dismiss = "modal">&times;</button>

                </div>
                <!--BODY-->
                <div class="modal-body">
                    Texto contenido en el modal
                </div>  
                <!--FOOTER-->
                <div class="modal-footer"></div>
                <button type = "button" class ="btn btn-danger" data-dismiss = "modal">CERRAR</button>                

            </div>

    </div>


TOOLTIPS

En este ejemplo lo ponemos sobre un link, pero puede ser una imágen, un <span> , etc..

<a href="#" data-toggle="tooltip" title="Esto es el tooltip">Pon el ratón aqui encima para ver el mensaje</a>


POPOVERS

Los popover son tooltips mas avanzados,  tienen la forma de los bocadillos de los comic

Estos elementos son inicializados y posicionados por librerias externas como Tether o Popper que deberemos tener instaladas en nuestro
proyecto, al menos puesto el enlace a su CDN , estas librerias son de javascript

Una vez disponemos de la libreria elegida,  debemos indicar mediante javascript que estos elementos sean usados en el DOM de estas
dos maneras:

Example: Enable popovers everywhere
One way to initialize all popovers on a page would be to select them by their data-toggle attribute:

$(function () {
  $('[data-toggle="popover"]').popover()
})


Example: Using the container option
When you have some styles on a parent element that interfere with a popover, you’ll want to specify a custom container so that the popover’s 
HTML appears within that element instead.

$(function () {
  $('.example-popover').popover({
    container: 'body'
  })
})


Para ver todas las propiedades que podemos incluir dentro de la función .popover() , ver la documentación oficial de Bootstrap, la más util
probablemente es hover, que seria bueno combinar con un delay (en milisegundos) para evitar que el popover aparezca simplemente con pasar
accidentalmente el ratón por el punto donde se encuentra programado

Ej esto simula a un tooltip avanzado

$(function () {
  $('[data-toggle="popover"]').popover(placement:"bottom", trigger:"hover", delay:500)
})



Ej en el HTML

<button type = "button"
	class = "btn btn-lg btn-success" 
	role = "button" data-toggle = "popover" 
	data-trigger = "focus" 
	data-placement = "top" --> opcional, esto indica por donde aparece el popover /top/right/left/bottom y se puede hacer con javascript
	title = "titulo_del_popover" 
	data-content = "contenido_del_popover">
</button


DATE PICKER WIDGET

Este es el código para el widget datepicker de FengYuanChen:


<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>Static Example</title>
  <style>body {font-family: Arial, sans-serif;}</style>
  
  <!-- jQuery -->
  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>

  <!-- Fengyuan Chen's Datepicker -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/datepicker/0.6.5/datepicker.min.css" integrity="sha256-b88RdwbRJEzRx95nCuuva+hO5ExvXXnpX+78h8DjyOE=" crossorigin="anonymous" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/datepicker/0.6.5/datepicker.min.js" integrity="sha256-/7FLTdzP6CfC1VBAj/rsp3Rinuuu9leMRGd354hvk0k=" crossorigin="anonymous"></script>
</head>
<body>

  <input id="datepicker">

  <script>
    $(function () {
      $("#datepicker").datepicker({autoHide:true, format:"dd-mm-yy"});
    });
  </script>

</body>
</html>



