Las expresiones Lambda se añadieron a partir de Java 8

A lambda expression is a short block of code which takes in parameters and returns a value. 
Lambda expressions are similar to methods, but they do not need a name and they can be implemented 
right in the body of a method.

Las expresiones lambda normalmete se usan para pasarlas como parámetro de una función

La expresión lambda más simple cotiene un parámetro y una expresión:

parametro -> expresion;

Para usar varios, parámetros, hay que incluirlos entre parentesis

(parametro1, parametro2) -> expresion;

Las expresiones son limitadas, deben devolver inmeditamente un valor, no pueden contener variables
ni incluir un IF o un FOR, para hacer cosas más complejas, un bloque de código debe ir dentro de {}.
Si la expresión lambda necesita devolver un valor, entonces el bloque de código debe incluir un return

(parameter1, parameter2) -> { code block };

Ej

Usamos una lambda para imprimir en consola con el metodo forEach() de los ArrayList los n elementos
de la colección

import java.util.ArrayList;

public class MyClass {
  public static void main(String[] args) {
    ArrayList<Integer> numbers = new ArrayList<Integer>();
    numbers.add(5);
    numbers.add(9);
    numbers.add(8);
    numbers.add(1);
    numbers.forEach( (n) -> { System.out.println(n); } );
  }
}

Lambda expressions can be stored in variables if the variable's type is an interface which 
has only one method. The lambda expression should have the same number of parameters and the 
same return type as that method. Java has many of these kinds of interfaces built in, such as 
the Consumer interface (found in the java.util package) used by lists.

import java.util.ArrayList;
import java.util.function.Consumer;

public class MyClass {
  public static void main(String[] args) {
    ArrayList<Integer> numbers = new ArrayList<Integer>();
    numbers.add(5);
    numbers.add(9);
    numbers.add(8);
    numbers.add(1);
    Consumer<Integer> method = (n) -> { System.out.println(n); };
    numbers.forEach( method );
  }
}

To use a lambda expression in a method, the method should have a parameter with a single-method 
interface as its type. Calling the interface's method will run the lambda expression:

interface StringFunction {
  String run(String str);
}

public class MyClass {
  public static void main(String[] args) {
    StringFunction exclaim = (s) -> s + "!";
    StringFunction ask = (s) -> s + "?";
    printFormatted("Hello", exclaim);
    printFormatted("Hello", ask);
  }
  public static void printFormatted(String str, StringFunction format) {
    String result = format.run(str);
    System.out.println(result);
  }
}

