Tkinter se usa sólo para hacer ventanas sencillas,  los desarrollos complejos requieren del uso de QT

from tkinter import *
from tkinter import messagebox  ## esto permite crear ventanas de dialogo tipo alert

#Instanciamos el objeto ventana
ventana = Tk()

#Indicamos el título de la ventana
ventana.title("Titulo")

#Indicamos el tamaño por defecto en pixels de la ventana
ventana.geometry("1050x600")


#Lanzamos el bucle que mantiene la ventana en pantalla
ventana.mainloop()

#Mostramos una ventana tipo alert
messagebox.showinfo("Titulo", "Mensaje")

#Escribimos una etiqueta en la ventana y la posicionamos con el método place()
etiqueta = Label(ventana, text = "texto").place(x = 10, y = 300)

#Los 3 métodos geométricos para ubicar cosas en la ventana son estos:

place() ##usa coordenadas
pack()  ##alinea los objetos en filas o columnas , usa los argumentos expand, fill y side
grid()  ##alinea los objetos en formato de parrilla - ej los botones de una calculadora - ,
	las filas empiezan por 1 y las columnas por 0

#Podemos añadir un lienzo ( Canvas ) para insertar imágenes que siempre serán PNG
canvas = Canvas(ventana, width = 800, height = 600)
canvas.pack(expand = YES , fill = BOTH)
imagen = PhotoImage(file = "foto.png")
canvas.create_image(0,0,image= imagen, anchor = NW) ##Ubicamos la imagen en fila 0 , columna 0

#Caja de texto para input de usuario :
entrada_usuario = StringVar()
campo = Entry(ventana, textvariable = entrada_usuario).place(x = 400 ,y = 50)
input = entrada_usuario.get()

#Botón en pantalla
Button(ventana, text = "Enviar", command = funcion_que_hayamos_definido).place(x = 10, y = 80)
#Las funciones vinculadas a eventos se invocan sin parentesis

#Evento click con el botón izquierdo del ratón ( ver resto de eventos )
ventana.bind("<Button 1>", funcion_definida) # las funciones vinculadas a eventos se invocan sin parentesis

#Forzamos el cierre automático de la ventana
ventana.destroy()